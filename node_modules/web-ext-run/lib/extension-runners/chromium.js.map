{"version":3,"file":"chromium.js","names":["fs","path","Launcher","ChromeLauncher","launch","defaultChromiumLaunch","set","createLogger","TempDir","isDirectory","fileExists","log","import","meta","url","EXCLUDED_CHROME_FLAGS","DEFAULT_CHROME_FLAGS","defaultFlags","filter","flag","includes","ChromeDevtoolsProtocolClient","receivedData","isProcessingMessage","lastId","deferredResponses","Map","disconnected","disconnectedPromise","resolveDisconnectedPromise","TEST_LOG_VERBOSE_CDP","process","env","constructor","chromiumInstance","incoming","outgoing","remoteDebuggingPipes","Promise","resolve","closed","warn","finalizeDisconnect","on","data","processNextMessage","error","outgoingPipe","waitUntilDisconnected","sendCommand","method","params","sessionId","undefined","Error","message","id","rawMessage","JSON","stringify","stderr","write","reject","#processNextMessage","end","indexOf","slice","result","parse","deferredResponse","get","delete","err","e","values","clear","#finalizeDisconnect","DEFAULT_PREFS","ChromiumExtensionRunner","cleanupCallbacks","chromiumLaunch","forceUseDeprecatedLoadExtension","exiting","_promiseSetupDone","Set","getName","run","setupInstance","isUserDataDir","dirPath","localStatePath","join","defaultPath","isProfileDir","securePreferencesPath","getProfilePaths","chromiumProfile","userDataDir","profileDirName","isProfileDirAndNotUserData","dir","base","extensions","map","sourceDir","chromiumBinary","debug","chromeFlags","push","args","keepProfileChanges","tmpDir","create","tmpDirPath","cp","recursive","startingUrl","startUrl","startingUrls","Array","isArray","shift","chromePath","logLevel","verbose","ignoreDefaultFlags","prefs","getPrefs","cdp","initialChromiumInstance","once","info","exit","cdpSupportsExtensionsLoadUnpacked","kill","reloadAllExtensions","runnerName","reloadAllExtensionsFallbackForChrome125andEarlier","stdout","Date","toTimeString","targetInfos","targets","type","t","startsWith","targetId","hasExistingTarget","length","newWindow","background","windowState","codeToEvaluateInChrome","developerPrivate","chrome","getExtensionsInfo","extensionIds","extension","location","reloadPromises","extensionId","reload","failQuietly","populateErrorForUnpacked","loadError","all","targetResult","flatten","i","evalResult","expression","awaitPromise","evalResultReturnValue","value","r","setTimeout","exceptionDetails","text","reloadExtensionBySourceDir","extensionSourceDir","registerCleanup","fn","add","catch","Object","entries","customChromiumPrefs","reduce","key"],"sources":["../../src/extension-runners/chromium.js"],"sourcesContent":["/**\n * This module provide an ExtensionRunner subclass that manage an extension executed\n * in a Chromium-based browser instance.\n */\n\nimport fs from 'fs/promises';\nimport path from 'path';\n\nimport {\n  Launcher as ChromeLauncher,\n  launch as defaultChromiumLaunch,\n} from 'chrome-launcher';\nimport set from 'set-value';\n\nimport { createLogger } from '../util/logger.js';\nimport { TempDir } from '../util/temp-dir.js';\nimport isDirectory from '../util/is-directory.js';\nimport fileExists from '../util/file-exists.js';\n\nconst log = createLogger(import.meta.url);\n\nconst EXCLUDED_CHROME_FLAGS = [\n  '--disable-extensions',\n  '--mute-audio',\n  '--disable-component-update',\n];\n\nexport const DEFAULT_CHROME_FLAGS = ChromeLauncher.defaultFlags().filter(\n  (flag) => !EXCLUDED_CHROME_FLAGS.includes(flag),\n);\n\n// This is a client for the Chrome Devtools protocol. The methods and results\n// are documented at https://chromedevtools.github.io/devtools-protocol/tot/\nclass ChromeDevtoolsProtocolClient {\n  #receivedData = '';\n  #isProcessingMessage = false;\n  #lastId = 0;\n  #deferredResponses = new Map();\n  #disconnected = false;\n  #disconnectedPromise;\n  #resolveDisconnectedPromise;\n\n  // Print all exchanged CDP messages to ease debugging.\n  TEST_LOG_VERBOSE_CDP = process.env.TEST_LOG_VERBOSE_CDP;\n\n  constructor(chromiumInstance) {\n    // remoteDebuggingPipes is from chrome-launcher, see\n    // https://github.com/GoogleChrome/chrome-launcher/pull/347\n    const { incoming, outgoing } = chromiumInstance.remoteDebuggingPipes;\n    this.#disconnectedPromise = new Promise((resolve) => {\n      this.#resolveDisconnectedPromise = resolve;\n    });\n    if (incoming.closed) {\n      // Strange. Did Chrome fail to start, or exit on startup?\n      log.warn('CDP already disconnected at initialization');\n      this.#finalizeDisconnect();\n      return;\n    }\n    incoming.on('data', (data) => {\n      this.#receivedData += data;\n      this.#processNextMessage();\n    });\n    incoming.on('error', (error) => {\n      log.error(error);\n      this.#finalizeDisconnect();\n    });\n    incoming.on('close', () => this.#finalizeDisconnect());\n    this.outgoingPipe = outgoing;\n  }\n\n  waitUntilDisconnected() {\n    return this.#disconnectedPromise;\n  }\n\n  async sendCommand(method, params, sessionId = undefined) {\n    if (this.#disconnected) {\n      throw new Error(`CDP disconnected, cannot send: command ${method}`);\n    }\n    const message = {\n      id: ++this.#lastId,\n      method,\n      params,\n      sessionId,\n    };\n    const rawMessage = `${JSON.stringify(message)}\\x00`;\n    if (this.TEST_LOG_VERBOSE_CDP) {\n      process.stderr.write(`[CDP] [SEND] ${rawMessage}\\n`);\n    }\n    return new Promise((resolve, reject) => {\n      // CDP will always send a response.\n      this.#deferredResponses.set(message.id, { method, resolve, reject });\n      this.outgoingPipe.write(rawMessage);\n    });\n  }\n\n  #processNextMessage() {\n    if (this.#isProcessingMessage) {\n      return;\n    }\n    this.#isProcessingMessage = true;\n    let end = this.#receivedData.indexOf('\\x00');\n    while (end !== -1) {\n      const rawMessage = this.#receivedData.slice(0, end);\n      this.#receivedData = this.#receivedData.slice(end + 1); // +1 skips \\x00.\n      try {\n        if (this.TEST_LOG_VERBOSE_CDP) {\n          process.stderr.write(`[CDP] [RECV] ${rawMessage}\\n`);\n        }\n        const { id, error, result } = JSON.parse(rawMessage);\n        const deferredResponse = this.#deferredResponses.get(id);\n        if (deferredResponse) {\n          this.#deferredResponses.delete(id);\n          if (error) {\n            const err = new Error(error.message || 'Unexpected CDP response');\n            deferredResponse.reject(err);\n          } else {\n            deferredResponse.resolve(result);\n          }\n        } else {\n          // Dropping events and non-response messages since we don't need it.\n        }\n      } catch (e) {\n        log.error(e);\n      }\n      end = this.#receivedData.indexOf('\\x00');\n    }\n    this.#isProcessingMessage = false;\n    if (this.#disconnected) {\n      for (const { method, reject } of this.#deferredResponses.values()) {\n        reject(new Error(`CDP connection closed before response to ${method}`));\n      }\n      this.#deferredResponses.clear();\n      this.#resolveDisconnectedPromise();\n    }\n  }\n\n  #finalizeDisconnect() {\n    if (!this.#disconnected) {\n      this.#disconnected = true;\n      this.#processNextMessage();\n    }\n  }\n}\n\nconst DEFAULT_PREFS = {\n  'extensions.ui.developer_mode': true,\n};\n\n/**\n * Implements an IExtensionRunner which manages a Chromium instance.\n */\nexport class ChromiumExtensionRunner {\n  cleanupCallbacks;\n  params;\n  chromiumInstance;\n  chromiumLaunch;\n  // --load-extension is deprecated, but only supported in Chrome 126+, see:\n  // https://github.com/mozilla/web-ext/issues/3388#issuecomment-2906982117\n  forceUseDeprecatedLoadExtension;\n  exiting;\n  _promiseSetupDone;\n\n  constructor(params) {\n    const { chromiumLaunch = defaultChromiumLaunch } = params;\n    this.params = params;\n    this.chromiumLaunch = chromiumLaunch;\n    // We will try to use Extensions.loadUnpacked first (Chrome 126+), and if\n    // that does not work fall back to --load-extension.\n    this.forceUseDeprecatedLoadExtension = false;\n    this.cleanupCallbacks = new Set();\n  }\n\n  // Method exported from the IExtensionRunner interface.\n\n  /**\n   * Returns the runner name.\n   */\n  getName() {\n    return 'Chromium';\n  }\n\n  async run() {\n    // Run should never be called more than once.\n    this._promiseSetupDone = this.setupInstance();\n    await this._promiseSetupDone;\n  }\n\n  static async isUserDataDir(dirPath) {\n    const localStatePath = path.join(dirPath, 'Local State');\n    const defaultPath = path.join(dirPath, 'Default');\n    // Local State and Default are typical for the user-data-dir\n    return (\n      (await fileExists(localStatePath)) && (await isDirectory(defaultPath))\n    );\n  }\n\n  static async isProfileDir(dirPath) {\n    const securePreferencesPath = path.join(dirPath, 'Secure Preferences');\n    //Secure Preferences is typical for a profile dir inside a user data dir\n    return await fileExists(securePreferencesPath);\n  }\n\n  static async getProfilePaths(chromiumProfile) {\n    if (!chromiumProfile) {\n      return {\n        userDataDir: null,\n        profileDirName: null,\n      };\n    }\n\n    const isProfileDirAndNotUserData =\n      (await ChromiumExtensionRunner.isProfileDir(chromiumProfile)) &&\n      !(await ChromiumExtensionRunner.isUserDataDir(chromiumProfile));\n\n    if (isProfileDirAndNotUserData) {\n      const { dir: userDataDir, base: profileDirName } =\n        path.parse(chromiumProfile);\n      return {\n        userDataDir,\n        profileDirName,\n      };\n    }\n\n    return {\n      userDataDir: chromiumProfile,\n      profileDirName: null,\n    };\n  }\n\n  /**\n   * Setup the Chromium Profile and run a Chromium instance.\n   */\n  async setupInstance() {\n    // NOTE: This function may be called twice, if the user is using an old\n    // Chrome version (before Chrome 126), because then we have to add a\n    // command-line flag (--load-extension) to load the extension. For details,\n    // see:\n    // https://github.com/mozilla/web-ext/issues/3388#issuecomment-2906982117\n\n    // Start chrome pointing it to a given profile dir\n    const extensions = this.params.extensions.map(({ sourceDir }) => sourceDir);\n\n    const { chromiumBinary } = this.params;\n\n    log.debug('Starting Chromium instance...');\n\n    if (chromiumBinary) {\n      log.debug(`(chromiumBinary: ${chromiumBinary})`);\n    }\n\n    const chromeFlags = [...DEFAULT_CHROME_FLAGS];\n    chromeFlags.push('--remote-debugging-pipe');\n\n    if (!this.forceUseDeprecatedLoadExtension) {\n      chromeFlags.push('--enable-unsafe-extension-debugging');\n    } else {\n      chromeFlags.push(`--load-extension=${extensions.join(',')}`);\n    }\n\n    if (this.params.args) {\n      chromeFlags.push(...this.params.args);\n    }\n\n    // eslint-disable-next-line prefer-const\n    let { userDataDir, profileDirName } =\n      await ChromiumExtensionRunner.getProfilePaths(\n        this.params.chromiumProfile,\n      );\n\n    if (userDataDir && this.params.keepProfileChanges) {\n      if (\n        profileDirName &&\n        !(await ChromiumExtensionRunner.isUserDataDir(userDataDir))\n      ) {\n        throw new Error(\n          'The profile you provided is not in a ' +\n            'user-data-dir. The changes cannot be kept. Please either ' +\n            'remove --keep-profile-changes or use a profile in a ' +\n            'user-data-dir directory',\n        );\n      }\n    } else if (!this.params.keepProfileChanges) {\n      // the user provided an existing profile directory but doesn't want\n      // the changes to be kept. we copy this directory to a temporary\n      // user data dir.\n      const tmpDir = new TempDir();\n      await tmpDir.create();\n      const tmpDirPath = tmpDir.path();\n\n      if (userDataDir && profileDirName) {\n        // copy profile dir to this temp user data dir.\n        await fs.cp(\n          path.join(userDataDir, profileDirName),\n          path.join(tmpDirPath, profileDirName),\n          { recursive: true },\n        );\n      } else if (userDataDir) {\n        await fs.cp(userDataDir, tmpDirPath, { recursive: true });\n      }\n      userDataDir = tmpDirPath;\n    }\n\n    if (profileDirName) {\n      chromeFlags.push(`--profile-directory=${profileDirName}`);\n    }\n\n    let startingUrl;\n    if (this.params.startUrl) {\n      const startingUrls = Array.isArray(this.params.startUrl)\n        ? this.params.startUrl\n        : [this.params.startUrl];\n      startingUrl = startingUrls.shift();\n      chromeFlags.push(...startingUrls);\n    }\n\n    this.chromiumInstance = await this.chromiumLaunch({\n      chromePath: chromiumBinary,\n      chromeFlags,\n      startingUrl,\n      userDataDir,\n      logLevel: this.params.verbose ? 'verbose' : 'silent',\n      // Ignore default flags to keep the extension enabled.\n      ignoreDefaultFlags: true,\n      prefs: this.getPrefs(),\n    });\n    this.cdp = new ChromeDevtoolsProtocolClient(this.chromiumInstance);\n\n    const initialChromiumInstance = this.chromiumInstance;\n    this.chromiumInstance.process.once('close', () => {\n      if (this.chromiumInstance !== initialChromiumInstance) {\n        // This happens when we restart Chrome to fall back to --load-extension.\n        return;\n      }\n      this.chromiumInstance = null;\n\n      if (!this.exiting) {\n        log.info('Exiting on Chromium instance disconnected.');\n        this.exit();\n      }\n    });\n\n    if (!this.forceUseDeprecatedLoadExtension) {\n      // Assume that the required Extensions.loadUnpacked CDP method is\n      // supported. If it is not, we will fall back to --load-extension.\n      let cdpSupportsExtensionsLoadUnpacked = true;\n      for (const sourceDir of extensions) {\n        try {\n          await this.cdp.sendCommand('Extensions.loadUnpacked', {\n            path: sourceDir,\n          });\n        } catch (e) {\n          // Chrome 125- will emit the following message:\n          if (e.message === \"'Extensions.loadUnpacked' wasn't found\") {\n            cdpSupportsExtensionsLoadUnpacked = false;\n            break;\n          }\n          log.error(`Failed to load extension at ${sourceDir}: ${e.message}`);\n          // We do not have to throw - the extension can work again when\n          // auto-reload is used. But users may like a hard fail, and this is\n          // consistent with the firefox runner.\n          throw e;\n        }\n      }\n      if (!cdpSupportsExtensionsLoadUnpacked) {\n        // Retry once, now with --load-extension.\n        log.warn('Cannot load extension via CDP, falling back to old method');\n        this.forceUseDeprecatedLoadExtension = true;\n        this.chromiumInstance = null;\n        await initialChromiumInstance.kill();\n        await this.cdp.waitUntilDisconnected();\n        this.cdp = null;\n        return this.setupInstance();\n      }\n    }\n  }\n\n  /**\n   * Reloads all the extensions, collect any reload error and resolves to\n   * an array composed by a single ExtensionRunnerReloadResult object.\n   */\n  async reloadAllExtensions() {\n    const runnerName = this.getName();\n\n    if (this.forceUseDeprecatedLoadExtension) {\n      this.reloadAllExtensionsFallbackForChrome125andEarlier();\n    } else {\n      for (const { sourceDir } of this.params.extensions) {\n        try {\n          await this.cdp.sendCommand('Extensions.loadUnpacked', {\n            path: sourceDir,\n          });\n        } catch (e) {\n          log.error(`Failed to load extension at ${sourceDir}: ${e.message}`);\n        }\n      }\n    }\n\n    process.stdout.write(\n      `\\rLast extension reload: ${new Date().toTimeString()}`,\n    );\n    log.debug('\\n');\n\n    return [{ runnerName }];\n  }\n\n  async reloadAllExtensionsFallbackForChrome125andEarlier() {\n    // Ideally, we'd like to use the \"Extensions.loadUnpacked\" CDP command to\n    // reload an extension, but that is unsupported in Chrome 125 and earlier.\n    //\n    // As a fallback, connect to chrome://extensions/ and reload from there.\n    // Since we are targeting old Chrome versions, we can safely use the\n    // chrome.developerPrivate APIs, because these are never going to change\n    // for the old browser versions. Do NOT use this for newer versions!\n    //\n    // Target.* CDP methods documented at: https://chromedevtools.github.io/devtools-protocol/tot/Target/\n    // developerPrivate documented at:\n    // https://source.chromium.org/chromium/chromium/src/+/main:chrome/common/extensions/api/developer_private.idl\n    //\n    // Specific revision that exposed developerPrivate to chrome://extensions/:\n    // https://source.chromium.org/chromium/chromium/src/+/main:chrome/common/extensions/api/developer_private.idl;drc=69bf75316e7ae533c0a0dccc1a56ca019aa95a1e\n    // https://chromium.googlesource.com/chromium/src.git/+/69bf75316e7ae533c0a0dccc1a56ca019aa95a1e\n    //\n    // Specific revision that introduced developerPrivate.getExtensionsInfo:\n    // https://source.chromium.org/chromium/chromium/src/+/main:chrome/common/extensions/api/developer_private.idl;drc=69bf75316e7ae533c0a0dccc1a56ca019aa95a1e\n    //\n    // The above changes are from 2015; The --remote-debugging-pipe feature\n    // that we rely on for CDP was added in 2018; this is the version of the\n    // developerPrivate API at that time:\n    // https://source.chromium.org/chromium/chromium/src/+/main:chrome/common/extensions/api/developer_private.idl;drc=c9ae59c8f37d487f1f01c222deb6b7d1f51c99c2\n\n    // Find an existing chrome://extensions/ tab, if it exists.\n    let { targetInfos: targets } = await this.cdp.sendCommand(\n      'Target.getTargets',\n      { filter: [{ type: 'tab' }] },\n    );\n    targets = targets.filter((t) => t.url.startsWith('chrome://extensions/'));\n    let targetId;\n    const hasExistingTarget = targets.length > 0;\n    if (hasExistingTarget) {\n      targetId = targets[0].targetId;\n    } else {\n      const result = await this.cdp.sendCommand('Target.createTarget', {\n        url: 'chrome://extensions/',\n        newWindow: true,\n        background: true,\n        windowState: 'minimized',\n      });\n      targetId = result.targetId;\n    }\n    const codeToEvaluateInChrome = async () => {\n      // This function is serialized and executed in Chrome. Designed for\n      // compatibility with Chrome 69 - 125. Do not use JS syntax of functions\n      // that are not supported in these versions!\n\n      // eslint-disable-next-line no-undef\n      const developerPrivate = chrome.developerPrivate;\n      if (!developerPrivate || !developerPrivate.getExtensionsInfo) {\n        // When chrome://extensions/ is still loading, its document URL may be\n        // about:blank and the chrome.developerPrivate API is not exposed.\n        return 'NOT_READY_PLEASE_RETRY';\n      }\n      const extensionIds = [];\n      await new Promise((resolve) => {\n        developerPrivate.getExtensionsInfo((extensions) => {\n          for (const extension of extensions || []) {\n            if (extension.location === 'UNPACKED') {\n              // We only care about those loaded via --load-extension.\n              extensionIds.push(extension.id);\n            }\n          }\n          resolve();\n        });\n      });\n      const reloadPromises = extensionIds.map((extensionId) => {\n        return new Promise((resolve, reject) => {\n          developerPrivate.reload(\n            extensionId,\n            // Suppress alert dialog when load fails.\n            { failQuietly: true, populateErrorForUnpacked: true },\n            (loadError) => {\n              if (loadError) {\n                reject(new Error(loadError.error));\n              } else {\n                resolve();\n              }\n            },\n          );\n        });\n      });\n      await Promise.all(reloadPromises);\n      return reloadPromises.length;\n    };\n    try {\n      const targetResult = await this.cdp.sendCommand('Target.attachToTarget', {\n        targetId,\n        flatten: true,\n      });\n      if (!targetResult.sessionId) {\n        throw new Error('Unexpectedly, no sessionId from attachToTarget');\n      }\n      // In practice, we're going to run the logic only once. But if we are\n      // unlucky, chrome://extensions is still loading, so we will then retry.\n      for (let i = 0; i < 3; ++i) {\n        const evalResult = await this.cdp.sendCommand(\n          'Runtime.evaluate',\n          {\n            expression: `(${codeToEvaluateInChrome})();`,\n            awaitPromise: true,\n          },\n          targetResult.sessionId,\n        );\n        const evalResultReturnValue = evalResult.result?.value;\n        if (evalResultReturnValue === 'NOT_READY_PLEASE_RETRY') {\n          await new Promise((r) => setTimeout(r, 200 * i));\n          continue;\n        }\n        if (evalResult.exceptionDetails) {\n          log.error(`Failed to reload: ${evalResult.exceptionDetails.text}`);\n        }\n        if (evalResultReturnValue !== this.params.extensions.length) {\n          log.warn(`Failed to reload extensions: ${evalResultReturnValue}`);\n        }\n        break;\n      }\n    } finally {\n      if (!hasExistingTarget && targetId) {\n        try {\n          await this.cdp.sendCommand('Target.closeTarget', { targetId });\n        } catch (e) {\n          log.error(e);\n        }\n      }\n    }\n  }\n\n  /**\n   * Reloads a single extension, collect any reload error and resolves to\n   * an array composed by a single ExtensionRunnerReloadResult object.\n   */\n  async reloadExtensionBySourceDir(\n    extensionSourceDir, // eslint-disable-line no-unused-vars\n  ) {\n    // TODO(rpl): detect the extension ids assigned to the\n    // target extensions and map it to the extensions source dir\n    // (https://github.com/mozilla/web-ext/issues/1687).\n    return this.reloadAllExtensions();\n  }\n\n  /**\n   * Register a callback to be called when the runner has been exited\n   * (e.g. the Chromium instance exits or the user has requested web-ext\n   * to exit).\n   */\n  registerCleanup(fn) {\n    this.cleanupCallbacks.add(fn);\n  }\n\n  /**\n   * Exits the runner, by closing the managed Chromium instance.\n   */\n  async exit() {\n    this.exiting = true;\n\n    // Wait for the setup to complete if the extension runner is already\n    // being started.\n    if (this._promiseSetupDone) {\n      // Ignore initialization errors if any.\n      await this._promiseSetupDone.catch((err) => {\n        log.debug(`ignored setup error on chromium runner shutdown: ${err}`);\n      });\n    }\n\n    if (this.chromiumInstance) {\n      await this.chromiumInstance.kill();\n      this.chromiumInstance = null;\n    }\n\n    if (this.cdp) {\n      await this.cdp.waitUntilDisconnected();\n      this.cdp = null;\n    }\n\n    // Call all the registered cleanup callbacks.\n    for (const fn of this.cleanupCallbacks) {\n      try {\n        fn();\n      } catch (error) {\n        log.error(error);\n      }\n    }\n  }\n\n  /**\n   * Returns a deep preferences object based on a set of flat preferences, like\n   * \"extensions.ui.developer_mode\".\n   */\n  getPrefs() {\n    return Object.entries({\n      ...DEFAULT_PREFS,\n      ...(this.params.customChromiumPrefs || {}),\n    }).reduce((prefs, [key, value]) => {\n      set(prefs, key, value);\n      return prefs;\n    }, {});\n  }\n}\n"],"mappings":"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","ignoreList":[]}